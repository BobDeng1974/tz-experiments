#ifndef __MM_GENERIC_RAM_LAYOUT_H
#define __MM_GENERIC_RAM_LAYOUT_H
#include <util.h>
#ifdef CFG_TEE_LOAD_ADDR
#define TEE_LOAD_ADDR		CFG_TEE_LOAD_ADDR
#else
#endif
#ifdef CFG_TEE_RAM_VA_SIZE
#define TEE_RAM_VA_SIZE		CFG_TEE_RAM_VA_SIZE
#else
#define TEE_RAM_VA_SIZE		CORE_MMU_PGDIR_SIZE
#endif
#ifdef CFG_SHMEM_SIZE
#define TEE_SHMEM_SIZE		CFG_SHMEM_SIZE
#endif
#ifdef CFG_SHMEM_START
#define TEE_SHMEM_START		CFG_SHMEM_START
#ifndef CFG_SHMEM_SIZE
#error CFG_SHMEM_START mandates CFG_SHMEM_SIZE
#endif
#endif
#if defined(CFG_TZSRAM_START)
#define TZSRAM_BASE		CFG_TZSRAM_START
#define TZSRAM_SIZE		CFG_TZSRAM_SIZE
#endif
#ifdef CFG_TZDRAM_START
#if !defined(CFG_WITH_PAGER) || defined(CFG_TZSRAM_START)
#define TZDRAM_BASE		CFG_TZDRAM_START
#define TZDRAM_SIZE		CFG_TZDRAM_SIZE
#else
#define TZSRAM_BASE		CFG_TZDRAM_START
#define TZSRAM_SIZE		CFG_CORE_TZSRAM_EMUL_SIZE
#define TZDRAM_BASE		ROUNDUP(TZSRAM_BASE + TZSRAM_SIZE, \
					TEE_RAM_VA_SIZE)
#define TZDRAM_SIZE		(CFG_TZDRAM_START + (CFG_TZDRAM_SIZE - \
					TZDRAM_BASE))
#endif
#ifdef CFG_WITH_PAGER
#define TEE_RAM_START		TZSRAM_BASE
#define TEE_RAM_PH_SIZE		TZSRAM_SIZE
#define TA_RAM_START		ROUNDUP(TZDRAM_BASE, CORE_MMU_PGDIR_SIZE)
#define TA_RAM_SIZE		(ROUNDDOWN(TZDRAM_BASE + (TZDRAM_SIZE - \
					   TEE_SDP_TEST_MEM_SIZE), \
					   CORE_MMU_PGDIR_SIZE) - TA_RAM_START)
#else
#define TEE_RAM_START		TZDRAM_BASE
#define TEE_RAM_PH_SIZE		TEE_RAM_VA_SIZE
#define TA_RAM_START		ROUNDUP(TZDRAM_BASE + TEE_RAM_VA_SIZE, \
					CORE_MMU_PGDIR_SIZE)
#define TA_RAM_SIZE		(ROUNDDOWN(TZDRAM_BASE + (TZDRAM_SIZE - \
					  TEE_RAM_VA_SIZE - \
					  TEE_SDP_TEST_MEM_SIZE), \
					  CORE_MMU_PGDIR_SIZE) - TA_RAM_START)
#endif 
#endif 
#if !defined(CFG_SECURE_DATA_PATH) || defined(CFG_TEE_SDP_MEM_BASE)
#define TEE_SDP_TEST_MEM_SIZE		0
#else
#ifdef CFG_TEE_SDP_MEM_SIZE
#define TEE_SDP_TEST_MEM_SIZE		CFG_TEE_SDP_MEM_SIZE
#else
#define TEE_SDP_TEST_MEM_SIZE		SIZE_2M
#endif
#define TEE_SDP_TEST_MEM_BASE		(CFG_TZDRAM_START + (CFG_TZDRAM_SIZE - \
						TEE_SDP_TEST_MEM_SIZE))
#endif
#endif 
