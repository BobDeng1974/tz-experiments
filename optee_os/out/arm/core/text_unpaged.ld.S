	*(.text.mobj_free)
	*(.text.unlikely.to_user_ta_ctx.part.7)
	*(.text.mobj_get_va.constprop.10)
	*(.text.release_ta_memory_by_mobj)
	*(.text.free_utc)
	*(.text.user_ta_dump_state)
	*(.text.user_ta_get_instance_id)
	*(.text.user_ta_ctx_destroy)
	*(.text.user_ta_enter)
	*(.text.user_ta_enter_close_session)
	*(.text.user_ta_enter_invoke_cmd)
	*(.text.user_ta_enter_open_session)
	*(.text.is_user_ta_ctx)
	*(.text.mobj_get_va)
	*(.text.update_out_param)
	*(.text.copy_in_param.isra.1)
	*(.text.unmap_mapped_param)
	*(.text.unlikely.to_pseudo_ta_ctx.part.3)
	*(.text.pseudo_ta_enter_open_session)
	*(.text.pseudo_ta_destroy)
	*(.text.pseudo_ta_enter_close_session)
	*(.text.pseudo_ta_enter_invoke_cmd)
	*(.text.is_pseudo_ta_ctx)
	*(.text.cpu_mmu_enable)
	*(.text.cpu_mmu_enable_icache)
	*(.text.cpu_mmu_enable_dcache)
	*(.text.__cpu_spin_lock)
	*(.text.__cpu_spin_trylock)
	*(.text.__cpu_spin_unlock)
	*(.text.spinlock_count_incr)
	*(.text.spinlock_count_decr)
	*(.text.have_spinlock)
	*(.text.tlbi_all)
	*(.text.tlbi_asid)
	*(.text.dcache_cleaninv_range)
	*(.text.dcache_clean_range)
	*(.text.dcache_inv_range)
	*(.text.do_dcsw_op)
	*(.text.dcache_op_all)
	*(.text.icache_inv_all)
	*(.text.icache_inv_range)
	*(.text.vector_std_smc_entry)
	*(.text.vector_fast_smc_entry)
	*(.text.vector_fiq_entry)
	*(.text.vector_cpu_on_entry)
	*(.text.vector_cpu_off_entry)
	*(.text.vector_cpu_suspend_entry)
	*(.text.vector_cpu_resume_entry)
	*(.text.vector_system_off_entry)
	*(.text.vector_system_reset_entry)
	*(.text.thread_vector_table)
	*(.text.thread_resume)
	*(.text.thread_std_smc_entry)
	*(.text.thread_rpc)
	*(.text.thread_smc)
	*(.text.thread_init_vbar)
	*(.text.__thread_enter_user_mode)
	*(.text.thread_unwind_user_mode)
	*(.text.thread_excp_vect)
	*(.text.el0_svc)
	*(.text.el1_sync_abort)
	*(.text.el0_sync_abort)
	*(.text.elx_irq)
	*(.text.elx_fiq)
	*(.text.thread_check_canaries)
	*(.text.thread_get_exceptions)
	*(.text.get_core_pos)
	*(.text.lock_global)
	*(.text.unlock_global)
	*(.text.thread_set_exceptions)
	*(.text.thread_mask_exceptions)
	*(.text.thread_unmask_exceptions)
	*(.text.thread_get_core_local)
	*(.text.thread_handle_fast_smc)
	*(.text.thread_get_tmp_sp)
	*(.text.thread_get_saved_thread_sp)
	*(.text.thread_stack_size)
	*(.text.thread_is_from_abort_mode)
	*(.text.thread_is_in_normal_mode)
	*(.text.thread_get_id_may_fail)
	*(.text.thread_stack_start)
	*(.text.thread_get_id)
	*(.text.thread_lazy_save_ns_vfp)
	*(.text.thread_handle_std_smc)
	*(.text.thread_lazy_restore_ns_vfp)
	*(.text.thread_state_free)
	*(.text.thread_init_per_cpu)
	*(.text.thread_get_tsd)
	*(.text.thread_get_ctx_regs)
	*(.text.thread_kernel_save_vfp)
	*(.text.thread_kernel_restore_vfp)
	*(.text.thread_user_enable_vfp)
	*(.text.thread_user_save_vfp)
	*(.text.thread_state_suspend)
	*(.text.thread_user_clear_vfp)
	*(.text.thread_enter_user_mode)
	*(.text.thread_add_mutex)
	*(.text.thread_rem_mutex)
	*(.text.thread_disable_prealloc_rpc_cache)
	*(.text.thread_enable_prealloc_rpc_cache)
	*(.text.__print_abort_info)
	*(.text.to_user_ta_ctx)
	*(.text.handle_user_ta_panic.isra.4)
	*(.text.abort_is_user_exception)
	*(.text.__abort_print)
	*(.text.abort_print)
	*(.text.abort_print_error)
	*(.text.abort_handler)
	*(.text.vfp_is_enabled)
	*(.text.vfp_enable)
	*(.text.vfp_disable)
	*(.text.vfp_lazy_save_state_init)
	*(.text.vfp_lazy_save_state_final)
	*(.text.vfp_lazy_restore_state)
	*(.text.vfp_save_extension_regs)
	*(.text.vfp_restore_extension_regs)
	*(.text.trace_ext_puts)
	*(.text.trace_ext_get_thread_id)
	*(.text.__get_core_pos)
	*(.text.get_core_pos_mpidr)
	*(.text.assert_have_no_spinlock)
	*(.text.cpu_spin_lock_dldetect)
	*(.text.cpu_spin_lock_xsave_dldetect)
	*(.text.cpu_spin_unlock)
	*(.text.cpu_spin_unlock_xrestore)
	*(.text.cv_signal.constprop.6)
	*(.text.mutex_unlock)
	*(.text.mutex_lock)
	*(.text.mutex_read_lock)
	*(.text.condvar_destroy)
	*(.text.condvar_signal)
	*(.text.condvar_broadcast)
	*(.text.condvar_wait)
	*(.text.cpu_spin_lock_xsave_dldetect.constprop.1)
	*(.text.cpu_spin_unlock.constprop.2)
	*(.text.wq_wait_init_condvar)
	*(.text.wq_wait_final)
	*(.text.wq_wake_next)
	*(.text.wq_promote_condvar)
	*(.text.wq_have_condvar)
	*(.text.pm_do_nothing)
	*(.text.plat_cpu_reset_late)
	*(.text.main_secondary_init_gic)
	*(.text.generic_boot_cpu_on_handler)
	*(.text.cpu_on_handler)
	*(.text.unhandled_cpu)
	*(.text.reset_vect_table)
	*(.text.unwind_exec_read_byte)
	*(.text.unwind_stack_arm32)
	*(.text.print_stack_arm32)
	*(.text.unwind_stack_arm64)
	*(.text.print_stack_arm64)
	*(.text.print_kernel_stack)
	*(.text.dummy.tee_svc_handler)
	*(.text.dummy.tee_entry_std)
	*(.text.dummy.__thread_std_smc_entry)
	*(.text.dummy.__wq_rpc)
	*(.text.va_is_in_map)
	*(.text.find_map_by_va)
	*(.text.map_pa2va)
	*(.text.unlikely.to_user_ta_ctx.part.8)
	*(.text.mmu_lock)
	*(.text.mmu_unlock)
	*(.text.find_map_by_type_and_pa)
	*(.text.core_mmu_nsec_ddr_is_defined)
	*(.text.core_mmu_type_to_attr)
	*(.text.cache_op_inner)
	*(.text.core_mmu_set_entry)
	*(.text.set_region)
	*(.text.core_mmu_get_entry)
	*(.text.core_mmu_unmap_pages)
	*(.text.core_mmu_map_pages)
	*(.text.virt_to_phys)
	*(.text.core_mmu_populate_user_map)
	*(.text.check_va_matches_pa)
	*(.text.phys_to_virt)
	*(.text.phys_to_virt_io)
	*(.text.cpu_mmu_enabled)
	*(.text.mobj_get_pa)
	*(.text.umap_remove_region.isra.8)
	*(.text.get_num_req_pgts.isra.10)
	*(.text.alloc_pgt)
	*(.text.select_va_in_range)
	*(.text.umap_add_region)
	*(.text.tee_mmu_user_va2pa_attr.isra.13)
	*(.text.mobj_matches.constprop.15)
	*(.text.cpu_spin_lock_dldetect.constprop.19)
	*(.text.mobj_get_phys_offs.constprop.20)
	*(.text.cpu_spin_unlock.constprop.18)
	*(.text.asid_free)
	*(.text.cmp_param_mem)
	*(.text.vm_info_final)
	*(.text.tee_mmu_is_vbuf_inside_ta_private)
	*(.text.tee_mmu_user_va2pa_helper)
	*(.text.tee_mmu_user_pa2va_helper)
	*(.text.tee_mmu_check_access_rights)
	*(.text.tee_mmu_set_ctx)
	*(.text.vm_map)
	*(.text.tee_mmu_map_param)
	*(.text.tee_mmu_get_ctx)
	*(.text.core_init_mmu_regs)
	*(.text.core_mmu_set_info_table)
	*(.text.core_mmu_find_table)
	*(.text.core_mmu_entry_to_finer_grained)
	*(.text.core_mmu_set_entry_primitive)
	*(.text.core_mmu_get_entry_primitive)
	*(.text.core_mmu_user_va_range_is_defined)
	*(.text.core_mmu_get_user_va_range)
	*(.text.core_mmu_get_user_pgdir)
	*(.text.core_mmu_create_user_map)
	*(.text.core_mmu_user_mapping_is_active)
	*(.text.core_mmu_get_user_map)
	*(.text.core_mmu_set_user_map)
	*(.text.core_mmu_get_fault_type)
	*(.text.update_max_allocated)
	*(.text.tee_mm_alloc)
	*(.text.tee_mm_free)
	*(.text.tee_mm_get_smem)
	*(.text.pgt_free_unlocked.isra.0)
	*(.text.pgt_alloc)
	*(.text.pgt_free)
	*(.text.mobj_reg_shm_get_cattr)
	*(.text.mobj_shm_matches)
	*(.text.unlikely.to_mobj_phys.part.0)
	*(.text.mobj_phys_matches)
	*(.text.mobj_virt_get_va)
	*(.text.to_mobj_mm)
	*(.text.mobj_mm_matches)
	*(.text.mobj_mm_get_cattr)
	*(.text.mobj_mm_get_phys_offs)
	*(.text.mobj_mm_get_pa)
	*(.text.mobj_mm_free)
	*(.text.unlikely.to_mobj_reg_shm.part.3)
	*(.text.mobj_reg_shm_matches)
	*(.text.unlikely.to_mobj_shm.part.6)
	*(.text.mobj_shm_get_pa)
	*(.text.cpu_spin_lock_dldetect.constprop.14)
	*(.text.cpu_spin_unlock.constprop.13)
	*(.text.mobj_phys_free)
	*(.text.mobj_shm_free)
	*(.text.mobj_phys_get_va)
	*(.text.mobj_phys_get_cattr)
	*(.text.mobj_reg_shm_get_phys_offs)
	*(.text.mobj_reg_shm_get_va)
	*(.text.mobj_shm_get_va)
	*(.text.mobj_shm_get_phys_offs)
	*(.text.mobj_phys_get_pa)
	*(.text.mobj_reg_shm_get_pa)
	*(.text.mobj_mm_get_va)
	*(.text.mobj_reg_shm_map)
	*(.text.mobj_reg_shm_unmap)
	*(.text.mobj_reg_shm_free)
	*(.text.tee_entry_get_api_call_count)
	*(.text.tee_entry_get_api_uuid)
	*(.text.tee_entry_get_api_revision)
	*(.text.tee_entry_get_os_uuid)
	*(.text.tee_entry_get_os_revision)
	*(.text.tee_entry_fast)
	*(.text.ihandler_ok)
	*(.text.main_fiq)
	*(.text.generic_boot_get_handlers)
	*(.text._assert_log)
	*(.text._assert_break)
	*(.text.console_putc)
	*(.text.console_flush)
	*(.text.dec_session_ref_count)
	*(.text.unlock_single_instance)
	*(.text.tee_ta_clear_busy)
	*(.text.tee_ta_try_set_busy.part.6)
	*(.text.check_client)
	*(.text.update_current_ctx)
	*(.text.tee_ta_set_busy)
	*(.text.tee_ta_put_session)
	*(.text.tee_ta_get_session)
	*(.text.tee_ta_close_session)
	*(.text.tee_ta_push_current_session)
	*(.text.tee_ta_pop_current_session)
	*(.text.tee_ta_get_current_session)
	*(.text.tee_ta_dump_current)
	*(.text.is_valid_conf_and_notnull_size)
	*(.text._core_is_buffer_inside)
	*(.text._core_is_buffer_intersect)
	*(.text.__do_panic)
	*(.text.itr_handle)
	*(.text.crypto_authenc_free_ctx)
	*(.text.crypto_aes_gcm_free_ctx)
	*(.text.tee_svc_copy_from_user)
	*(.text.tee_svc_copy_to_user)
	*(.text.op_attr_value_from_obj)
	*(.text.op_attr_value_clear)
	*(.text.tee_svc_find_type_props)
	*(.text.op_attr_value_from_user)
	*(.text.op_attr_secret_value_from_obj)
	*(.text.op_u32_from_binary_helper)
	*(.text.op_attr_value_from_binary)
	*(.text.op_attr_secret_value_from_binary)
	*(.text.op_u32_to_binary_helper)
	*(.text.op_attr_value_to_binary)
	*(.text.op_attr_value_to_user)
	*(.text.op_attr_secret_value_to_user)
	*(.text.op_attr_bignum_clear)
	*(.text.op_attr_bignum_free)
	*(.text.op_attr_bignum_from_obj)
	*(.text.op_attr_bignum_from_binary)
	*(.text.op_attr_bignum_from_user)
	*(.text.op_attr_bignum_to_binary)
	*(.text.op_attr_secret_value_clear)
	*(.text.cryp_state_free)
	*(.text.op_attr_bignum_to_user)
	*(.text.op_attr_secret_value_from_user)
	*(.text.op_attr_secret_value_to_binary)
	*(.text.tee_obj_attr_free)
	*(.text.tee_svc_cryp_free_states)
	*(.text.tee_svc_close_enum.part.1)
	*(.text.tee_svc_storage_close_all_enum)
	*(.text.tee_obj_get)
	*(.text.tee_obj_free)
	*(.text.tee_obj_close)
	*(.text.tee_obj_close_all)
	*(.text.tee_pobj_release)
	*(.text.io_pa_or_va)
	*(.text.pl011_flush)
	*(.text.pl011_have_rx_data)
	*(.text.pl011_putc)
	*(.text.pl011_getchar)
	*(.text.gic_it_handle)
	*(.text.cipher_get_ctx_size)
	*(.text.mac_get_ctx_size)
	*(.text.crypto_hash_free_ctx)
	*(.text.crypto_bignum_num_bytes)
	*(.text.crypto_bignum_bn2bin)
	*(.text.crypto_bignum_bin2bn)
	*(.text.crypto_bignum_copy)
	*(.text.crypto_bignum_free)
	*(.text.crypto_bignum_clear)
	*(.text.crypto_cipher_free_ctx)
	*(.text.crypto_mac_free_ctx)
	*(.text.crypto_aes_ccm_free_ctx)
	*(.text.ltc_init_multi)
	*(.text.ltc_init_multi_size)
	*(.text.ltc_deinit_multi)
	*(.text.zeromem)
	*(.text.prng_is_valid)
	*(.text.rsa_exptmod)
	*(.text.rsa_make_key)
	*(.text.ltc_ecc_new_point)
	*(.text.ltc_ecc_del_point)
	*(.text.get_digit)
	*(.text.get_digit_count)
	*(.text.mpa_rand)
	*(.text.montgomery_deinit)
	*(.text.copy)
	*(.text.compare_d)
	*(.text.div_2)
	*(.text.unsigned_read)
	*(.text.read_radix)
	*(.text.get_int)
	*(.text.set_int)
	*(.text.neg)
	*(.text.deinit_mpanum)
	*(.text.deinit)
	*(.text.twoexpt)
	*(.text.isprime)
	*(.text.montgomery_normalization)
	*(.text.mod)
	*(.text.invmod)
	*(.text.mulmod)
	*(.text.sqrmod)
	*(.text.add)
	*(.text.gcd)
	*(.text.divide)
	*(.text.sqr)
	*(.text.mul)
	*(.text.muli)
	*(.text.subi)
	*(.text.sub)
	*(.text.addi)
	*(.text.write_radix)
	*(.text.count_lsb_bits)
	*(.text.count_bits)
	*(.text.montgomery_setup)
	*(.text.unsigned_size)
	*(.text.unsigned_write)
	*(.text.compare)
	*(.text.montgomery_reduce)
	*(.text.init_size)
	*(.text.init)
	*(.text.init_copy)
	*(.text.exptmod)
	*(.text.lcm)
	*(.text.modi)
	*(.text.rand_prime)
	*(.text.ltc_ecc_map)
	*(.text.ltc_ecc_mulmod)
	*(.text.ltc_ecc_mul2add)
	*(.text.ltc_ecc_projective_add_point)
	*(.text.ltc_ecc_projective_dbl_point)
	*(.text.__mpa_set_unused_digits_to_zero)
	*(.text.mpa_wipe)
	*(.text.mpa_copy)
	*(.text.mpa_highest_bit_index)
	*(.text.mpa_get_bit)
	*(.text.mpa_parity)
	*(.text.mpa_constant_one)
	*(.text.__mpa_montgomery_mul_add)
	*(.text.__mpa_montgomery_sub_ack)
	*(.text.__mpa_montgomery_mul)
	*(.text.mpa_compute_fmm_context)
	*(.text.mpa_montgomery_mul)
	*(.text.mpa_is_prob_prime)
	*(.text.mpa_set_S32)
	*(.text.mpa_set_word)
	*(.text.mpa_get_word)
	*(.text.__mpa_div_dword)
	*(.text.__mpa_div_q_r_internal_word)
	*(.text.__mpa_div_q_r)
	*(.text.mpa_div)
	*(.text.__mpa_divby2)
	*(.text.__mpa_gcd.part.0)
	*(.text.__mpa_egcd)
	*(.text.mpa_gcd)
	*(.text.mpa_extended_gcd)
	*(.text.mpa_alloc_static_temp_var_size)
	*(.text.mpa_alloc_static_temp_var)
	*(.text.mpa_free_static_temp_var)
	*(.text.__mpa_mul_add_word)
	*(.text.__mpa_mul_add_word_cum)
	*(.text.__mpa_abs_mul_word)
	*(.text.__mpa_abs_mul)
	*(.text.mpa_mul)
	*(.text.mpa_mul_word)
	*(.text.mpa_get_random)
	*(.text.mpa_get_random_digits)
	*(.text.__mpa_shift_words_left)
	*(.text.__mpa_shift_words_right)
	*(.text.mpa_shift_left)
	*(.text.mpa_shift_right)
	*(.text.__mpa_full_adder)
	*(.text.__mpa_full_sub)
	*(.text.__mpa_abs_add)
	*(.text.__mpa_abs_sub)
	*(.text.mpa_add)
	*(.text.mpa_sub)
	*(.text.mpa_neg)
	*(.text.mpa_add_word)
	*(.text.mpa_sub_word)
	*(.text.__mpa_abs_cmp)
	*(.text.__mpa_abs_greater_than)
	*(.text.mpa_cmp)
	*(.text.mpa_cmp_short)
	*(.text.mpa_exp_mod)
	*(.text.mpa_init_static)
	*(.text.mpa_init_static_fmm_context)
	*(.text.__mpa_word_to_hexstr)
	*(.text.__mpa_mpanum_to_hexstr)
	*(.text.__mpa_isspace)
	*(.text.mpa_set_str)
	*(.text.mpa_get_str)
	*(.text.mpa_set_oct_str)
	*(.text.mpa_get_oct_str)
	*(.text.mpa_mod)
	*(.text.mpa_mul_mod)
	*(.text.mpa_inv_mod)
	*(.text.raw_malloc_return_hook.isra.4)
	*(.text.malloc_lock)
	*(.text.malloc_unlock)
	*(.text.bget)
	*(.text.raw_malloc.constprop.16)
	*(.text.bgetz)
	*(.text.brel)
	*(.text.malloc)
	*(.text.free)
	*(.text.calloc)
	*(.text.swapfunc)
	*(.text.med3)
	*(.text.qsort)
	*(.text.snprintf)
	*(.text.memchr)
	*(.text.memcmp)
	*(.text.memcpy)
	*(.text.memset)
	*(.text.strlen)
	*(.text.__vsnprintf)
	*(.text.vsnprintk)
	*(.text.snprintk)
	*(.text.trace_printf)
	*(.text.put_pool)
	*(.text.mempool_alloc)
	*(.text.mempool_free)
